Vagrant.configure("2") do |config|
  config.vm.box = "chef/ubuntu-14.04"
  config.vm.synced_folder "../../applications", "/applications", create: true
  config.vm.synced_folder "../../websites", "/websites", create: true
  # config.vm.synced_folder "../../websites/testingApp", "/vagrant/testingApp/testingApp", create: true
  config.vm.network "forwarded_port", guest: 8761, host: 8761 # discoveryService (Eureka server)
  config.vm.network "forwarded_port", guest: 8765, host: 8765 # edgeService (Zuul proxy)
  #config.vm.network "forwarded_port", guest: 8888, host: 8888 # config server
  config.vm.network "forwarded_port", guest: 9324, host: 9324 # elasticMQ
  config.vm.network "forwarded_port", guest: 5672, host: 5672 # rabbitMQ  
  config.vm.network "forwarded_port", guest: 15672, host: 15672 # rabbitMQ management console
  config.vm.network "forwarded_port", guest: 8080, host: 18080 # nginx
  config.vm.network "forwarded_port", guest: 28080, host: 28080 # grafana

  if ENV['exclude']
    puts 'Excluding service: ' + ENV['exclude']
    excludeServices = ENV['exclude'].split(',')
  else 
    excludeServices = []
  end

  config.vm.provider "virtualbox" do |v|
    v.memory = 3096
    v.cpus = 2
  end
  
  config.vm.provision "docker" do |d|    
    d.build_image "--tag=discoveryservice /vagrant/discoveryService"
    d.build_image "--tag=edgeservice /vagrant/edgeService"
    d.build_image "--tag=statusservice /vagrant/statusService"
    d.build_image "--tag=appointmentgateway /vagrant/appointmentGateway"
    d.build_image "--tag=appointmentrequestscheduler /vagrant/appointmentRequestScheduler"
    d.build_image "--tag=testingapp /vagrant/testingApp"
    d.build_image "--tag=configsrv /vagrant/configsrv"
    
    if !excludeServices.include? 'discoveryservice'
    d.run "discoveryservice",
      args: "-p 8761:8761 -v /applications:/applications"
    end 

    if !excludeServices.include? 'rabbitmq'
    d.run "rabbitmq:3-management",
      args: "-d -e RABBITMQ_NODENAME=my-rabbit -p 5672:5672 -p 15672:15672  --name theRabbit"
    end 
    
    unless excludeServices.include? 'grafana'
      d.run "grafana", 
        args: "-d -v $(pwd)/logs:/var/log/supervisor -p28080:80 -p8125:8125/udp -p 8126:8126 --name grafana  kamon/grafana_graphite"
    end

    if !excludeServices.include? 'testingapp'
    d.run "testingapp",
      args: "-p 8080:80 -v /websites/testingApp:/usr/share/nginx/html/testingapp:ro -v /vagrant/testingapp/nginx.conf:/etc/nginx/nginx.conf:ro"
    end 

    if !excludeServices.include? 'edgeservice'   
    d.run "edgeservice",      
      args: "-p 8765:8765 -v /applications:/applications --link discoveryservice:discoveryservice --link testingapp:testingapp"
    end 

    if !excludeServices.include? 'statusservice'
      d.run "statusservice",
        args: "-v /applications:/applications --link discoveryservice:discoveryservice --link theRabbit:theRabbit"
    end 

    if !excludeServices.include? 'appointmentgateway'
    d.run "appointmentgateway",
      args: "-v /applications:/applications --link discoveryservice:discoveryservice --link theRabbit:theRabbit"
    end

    if !excludeServices.include? 'appointmentrequestscheduler'
    d.run "appointmentrequestscheduler", 
      args: "-v /applications:/applications --link discoveryservice:discoveryservice --link theRabbit:theRabbit"
    end

   # d.run "configsrv",
   #   args: "-p 8888:8888 -v /applications:/applications"

   
   
  end

end
